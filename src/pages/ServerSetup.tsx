import { useState } from "react";
import { FiUpload, FiLock } from "react-icons/fi";
import { FaLeaf } from "react-icons/fa";
import { useNavigate } from "react-router-dom"; // ‚¨ÖÔ∏è ‡πÄ‡∏û‡∏¥‡πà‡∏°

export default function ServiceSetup() {
  const [model, setModel] = useState("");
  const [capacity, setCapacity] = useState("");
  const [accuracy, setAccuracy] = useState("90");
  const [cycleMins, setCycleMins] = useState("15");
  const [speed, setSpeed] = useState("2.5");

  const navigate = useNavigate(); // ‚¨ÖÔ∏è ‡πÄ‡∏û‡∏¥‡πà‡∏°

  const handleSave = () => {
    // TODO: ‡πÉ‡∏™‡πà logic ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á ‡πÜ ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà (call API/validate ‡∏Ø‡∏•‡∏Ø)
    // ‡∏™‡∏°‡∏°‡∏∏‡∏ï‡∏¥‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‚Üí ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏∑‡πà‡∏ô
    navigate("/severpage"); // <-- ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô path ‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
  };

  return (
    <div className="min-h-screen bg-[#eef5ec]">
      {/* top spacer bar (‡πÉ‡∏´‡πâ‡∏ü‡∏µ‡∏•‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏°‡∏µ‡πÅ‡∏ñ‡∏ö‡∏´‡∏±‡∏ß‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô) */}
      <div className="h-14 bg-white/70 border-b border-[#d9eadf]" />

      <main className="max-w-5xl mx-auto px-6 py-6">
        {/* Title */}
        <div className="mb-5">
          <div className="inline-flex items-center gap-2 rounded-xl bg-white px-4 py-2 shadow-sm border border-[#d9eadf]">
             <img
             src="/images/logo.png"
             alt="Logo"
             className="h-15 w-15 object-contain"/>
            <h1 className="text-xl sm:text-2xl font-bold text-[#2f6b4f]">
              ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ <span className="ml-1">üëã</span>
            </h1>
          </div>
          <p className="mt-3 text-sm text-slate-600">
            ‡πÄ‡∏ï‡∏¥‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢
          </p>
        </div>

        {/* Card: ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå */}
        <section className="bg-white rounded-2xl shadow-sm border border-[#dbeee2] p-5 mb-6">
          <h2 className="font-semibold text-slate-800 mb-4">
            <span className="mr-2">üß©</span>‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå
          </h2>

          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            {/* ‡πÅ‡∏ñ‡∏ß 1 */}
            <div className="col-span-1 md:col-span-1">
              <label className="block text-sm text-slate-600 mb-1">‡∏£‡∏∏‡πà‡∏ô‡πÇ‡∏î‡∏£‡∏ô</label>
              <div className="relative">
                <select
                  value={model}
                  onChange={(e) => setModel(e.target.value)}
                  className="w-full appearance-none rounded-lg border border-slate-300 bg-white px-3 py-2 pr-9 outline-none focus:border-emerald-500 focus:ring-1 focus:ring-emerald-500"
                >
                  <option value="">{`‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå`}</option>
                  <option>DJI Agras T30</option>
                  <option>DJI Agras T40</option>
                  <option>‡∏≠‡∏∑‡πà‡∏ô ‡πÜ</option>
                </select>
                <span className="pointer-events-none absolute right-3 top-1/2 -translate-y-1/2 text-slate-400">
                  ‚ñæ
                </span>
              </div>
            </div>

            <div>
              <label className="block text-sm text-slate-600 mb-1">‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏∏‡∏ñ‡∏±‡∏á‡∏ô‡πâ‡∏≥</label>
              <div className="flex">
                <input
                  value={capacity}
                  onChange={(e) => setCapacity(e.target.value)}
                  placeholder="40"
                  className="w-full rounded-l-lg border border-slate-300 bg-white px-3 py-2 outline-none focus:border-emerald-500 focus:ring-1 focus:ring-emerald-500"
                />
                <span className="inline-flex items-center rounded-r-lg border border-l-0 border-slate-300 px-3 text-sm text-slate-500">
                  ‡∏•‡∏¥‡∏ï‡∏£
                </span>
              </div>
            </div>

            {/* ‡πÅ‡∏ñ‡∏ß 2 */}
            <div>
              <label className="block text-sm text-slate-600 mb-1">‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡πà‡∏ô</label>
              <div className="flex">
                <input
                  value={accuracy}
                  onChange={(e) => setAccuracy(e.target.value)}
                  className="w-full rounded-l-lg border border-slate-300 bg-white px-3 py-2 outline-none focus:border-emerald-500 focus:ring-1 focus:ring-emerald-500"
                />
                <span className="inline-flex items-center rounded-r-lg border border-l-0 border-slate-300 px-3 text-sm text-slate-500">
                  %
                </span>
              </div>
            </div>

            <div>
              <label className="block text-sm text-slate-600 mb-1">‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡πà‡∏≠‡∏£‡∏≠‡∏ö</label>
              <div className="flex">
                <input
                  value={cycleMins}
                  onChange={(e) => setCycleMins(e.target.value)}
                  className="w-full rounded-l-lg border border-slate-300 bg-white px-3 py-2 outline-none focus:border-emerald-500 focus:ring-1 focus:ring-emerald-500"
                />
                <span className="inline-flex items-center rounded-r-lg border border-l-0 border-slate-300 px-3 text-sm text-slate-500">
                  ‡∏ô‡∏≤‡∏ó‡∏µ
                </span>
              </div>
            </div>

            {/* ‡πÅ‡∏ñ‡∏ß 3 */}
            <div className="md:col-span-2">
              <label className="block text-sm text-slate-600 mb-1">‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡πà‡∏ô</label>
              <div className="flex max-w-sm">
                <input
                  value={speed}
                  onChange={(e) => setSpeed(e.target.value)}
                  className="w-full rounded-l-lg border border-slate-300 bg-white px-3 py-2 outline-none focus:border-emerald-500 focus:ring-1 focus:ring-emerald-500"
                />
                <span className="inline-flex items-center rounded-r-lg border border-l-0 border-slate-300 px-3 text-sm text-slate-500">
                  ‡πÑ‡∏£‡πà/‡∏ô‡∏≤‡∏ó‡∏µ
                </span>
              </div>
            </div>
          </div>
        </section>

        {/* Card: ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô */}
        <section className="bg-white rounded-2xl shadow-sm border border-[#dbeee2] p-5 mb-6">
          <h2 className="font-semibold text-slate-800 mb-4">
            <span className="mr-2">üìÑ</span>‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô
          </h2>

          <div className="space-y-5">
            {/* ‡∏£‡∏π‡∏õ‡∏ñ‡πà‡∏≤‡∏¢ 1 ‡∏ô‡∏¥‡πâ‡∏ß */}
            <div>
              <p className="text-sm text-slate-600 mb-1">‡∏£‡∏π‡∏õ‡∏ñ‡πà‡∏≤‡∏¢ 1 ‡∏ô‡∏¥‡πâ‡∏ß</p>
              <p className="text-xs text-slate-500 mb-2">JPG, PNG ‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 5MB</p>
              <Dropzone label="‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î ‡∏´‡∏£‡∏∑‡∏≠‡∏ß‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏ß‡πâ‡∏ö‡∏£‡∏¥‡πÄ‡∏ß‡∏ì‡∏ô‡∏µ‡πâ" />
            </div>

            {/* ‡∏™‡∏≥‡πÄ‡∏ô‡∏≤‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô */}
            <div>
              <p className="text-sm text-slate-600 mb-1">‡∏™‡∏≥‡πÄ‡∏ô‡∏≤‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô</p>
              <p className="text-xs text-slate-500 mb-2">PDF, JPG, PNG ‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 10MB</p>
              <Dropzone icon="edit" label="‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î ‡∏´‡∏£‡∏∑‡∏≠‡∏ß‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏ß‡πâ‡∏ö‡∏£‡∏¥‡πÄ‡∏ß‡∏ì‡∏ô‡∏µ‡πâ" />
            </div>
          </div>
        </section>

        {/* ‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ï‡∏£‡∏á‡∏Å‡∏•‡∏≤‡∏á */}
        <div className="pb-10 flex justify-center">
          <button
            onClick={handleSave} // ‚¨ÖÔ∏è ‡πÄ‡∏û‡∏¥‡πà‡∏°
            className="inline-flex items-center justify-center gap-2 rounded-lg bg-[#009966] px-8 py-3 text-white font-medium shadow-sm hover:bg-[#008255] active:bg-[#006644] border border-emerald-700/30"
          >
            <FiLock className="text-lg" />
            ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
          </button>
        </div>
      </main>
    </div>
  );
}

/* ----------------- components ----------------- */

function Dropzone({ label, icon }: { label: string; icon?: "edit" }) {
  return (
    <label className="block">
      <input type="file" className="hidden" />
      <div className="grid place-items-center h-40 rounded-xl border-2 border-dashed border-slate-300 bg-[#f7fbf8] hover:border-emerald-400 transition">
        <div className="flex flex-col items-center gap-2 text-slate-500">
          <div className="h-10 w-10 rounded-full grid place-items-center bg-emerald-100 text-emerald-700">
            {icon === "edit" ? <span className="text-lg">‚úèÔ∏è</span> : <FiUpload />}
          </div>
          <p className="text-sm">{label}</p>
        </div>
      </div>
    </label>
  );
}
