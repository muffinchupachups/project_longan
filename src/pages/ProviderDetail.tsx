import { useState } from "react";
import {
  BarChart,
  Bar,
  XAxis,
  YAxis,
  Tooltip,
  Legend,
} from "recharts";

const providers = [
  {
    name: "‡∏ô‡∏≤‡∏¢‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ",
    fertilizer: "5 ‡∏Å‡∏Å./‡πÑ‡∏£‡πà",
    area: 10,
    workers: 3,
    time: 4,
    total: 5000,
  },
  {
    name: "‡∏ô‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡πÄ‡∏™‡∏£‡∏¥‡∏ê ‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á",
    fertilizer: "7 ‡∏Å‡∏Å./‡πÑ‡∏£‡πà",
    area: 15,
    workers: 5,
    time: 6,
    total: 7500,
  },
  {
    name: "‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏™‡∏∏‡∏î‡∏≤ ‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏ó‡∏≤‡∏á",
    fertilizer: "6 ‡∏Å‡∏Å./‡πÑ‡∏£‡πà",
    area: 12,
    workers: 4,
    time: 5,
    total: 6200,
  },
];

export default function ProviderDetail() {
  const [select1, setSelect1] = useState("‡∏ô‡∏≤‡∏¢‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ");
  const [select2, setSelect2] = useState("‡∏ô‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡πÄ‡∏™‡∏£‡∏¥‡∏ê ‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á");
  const [select3, setSelect3] = useState("‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏™‡∏∏‡∏î‡∏≤ ‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏ó‡∏≤‡∏á");
  const [task, setTask] = useState("‡∏ï‡∏±‡∏î‡πÅ‡∏ï‡πà‡∏á‡∏Å‡∏¥‡πà‡∏á");

  const p1 = providers.find((p) => p.name === select1)!;
  const p2 = providers.find((p) => p.name === select2)!;
  const p3 = providers.find((p) => p.name === select3)!;

  // ‚úÖ ‡∏´‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏™‡∏£‡πá‡∏à‡πÑ‡∏ß‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡πÅ‡∏•‡∏∞‡∏ñ‡∏π‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î
  const fastest = [...providers].sort((a, b) => a.time - b.time)[0];
  const cheapest = [...providers].sort((a, b) => a.total - b.total)[0];

  // ‚úÖ ‡∏Å‡∏£‡∏≤‡∏ü‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö
  const compareData = [
    { name: "‡∏™‡∏°‡∏ä‡∏≤‡∏¢", workers: p1.workers, time: p1.time, cost: p1.total },
    { name: "‡∏õ‡∏£‡∏∞‡πÄ‡∏™‡∏£‡∏¥‡∏ê", workers: p2.workers, time: p2.time, cost: p2.total },
    { name: "‡∏™‡∏∏‡∏î‡∏≤", workers: p3.workers, time: p3.time, cost: p3.total },
  ];

  return (
    <div className="p-6 bg-gray-50 min-h-screen">
      {/* Profile */}
      <div className="bg-white p-4 rounded-lg shadow mb-6 flex items-center gap-4">
        <img
          src="https://i.pravatar.cc/100?img=55"
          alt="provider"
          className="w-20 h-20 rounded-full"
        />
        <div>
          <h2 className="text-xl font-bold">‡∏ô‡∏≤‡∏¢‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ</h2>
          <p>üìû 089-123-4567</p>
          <p>üìß somchai@email.com</p>
          <p>üìç ‡∏•‡∏≥‡∏û‡∏π‡∏ô, ‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡∏•‡∏≥‡∏û‡∏π‡∏ô</p>
        </div>
      </div>

      {/* Dropdown ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏á‡∏≤‡∏ô */}
      <div className="bg-white p-4 rounded-lg shadow mb-6">
        <label className="block mb-2 font-semibold">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏á‡∏≤‡∏ô</label>
        <select
          value={task}
          onChange={(e) => setTask(e.target.value)}
          className="border rounded p-2"
        >
          <option>‡∏ï‡∏±‡∏î‡πÅ‡∏ï‡πà‡∏á‡∏Å‡∏¥‡πà‡∏á</option>
          <option>‡πÉ‡∏´‡πâ‡∏õ‡∏∏‡πã‡∏¢</option>
          <option>‡πÄ‡∏Å‡πá‡∏ö‡∏ú‡∏•</option>
        </select>
      </div>

      {/* ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö */}
      <div className="bg-white p-4 rounded-lg shadow mb-6">
        <h3 className="font-semibold mb-4">‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£</h3>

        {/* dropdown ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ */}
        <div className="grid grid-cols-3 gap-4 mb-4">
          <select
            value={select1}
            onChange={(e) => setSelect1(e.target.value)}
            className="border rounded p-2"
          >
            {providers.map((p) => (
              <option key={p.name}>{p.name}</option>
            ))}
          </select>
          <select
            value={select2}
            onChange={(e) => setSelect2(e.target.value)}
            className="border rounded p-2"
          >
            {providers.map((p) => (
              <option key={p.name}>{p.name}</option>
            ))}
          </select>
          <select
            value={select3}
            onChange={(e) => setSelect3(e.target.value)}
            className="border rounded p-2"
          >
            {providers.map((p) => (
              <option key={p.name}>{p.name}</option>
            ))}
          </select>
        </div>

        {/* ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö */}
        <table className="w-full text-sm">
          <thead className="bg-gray-100">
            <tr>
              <th className="p-2">‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</th>
              <th className="p-2">{p1.name.split(" ")[0]}</th>
              <th className="p-2">{p2.name.split(" ")[0]}</th>
              <th className="p-2">{p3.name.split(" ")[0]}</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td className="p-2">‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì‡∏õ‡∏∏‡πã‡∏¢/‡∏Æ‡∏≠‡∏£‡πå‡πÇ‡∏°‡∏ô</td>
              <td className="p-2">{p1.fertilizer}</td>
              <td className="p-2">{p2.fertilizer}</td>
              <td className="p-2">{p3.fertilizer}</td>
            </tr>
            <tr>
              <td className="p-2">‡∏Ç‡∏ô‡∏≤‡∏î‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà (‡πÑ‡∏£‡πà)</td>
              <td className="p-2">{p1.area}</td>
              <td className="p-2">{p2.area}</td>
              <td className="p-2">{p3.area}</td>
            </tr>
            <tr>
              <td className="p-2">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏£‡∏á‡∏á‡∏≤‡∏ô</td>
              <td className="p-2">{p1.workers}</td>
              <td className="p-2">{p2.workers}</td>
              <td className="p-2">{p3.workers}</td>
            </tr>
            <tr>
              <td className="p-2">‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤ (‡∏ä‡∏°.)</td>
              <td className="p-2">{p1.time}</td>
              <td className="p-2">{p2.time}</td>
              <td className="p-2">{p3.time}</td>
            </tr>
            <tr>
              <td className="p-2 font-semibold">‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô‡∏£‡∏ß‡∏°</td>
              <td className="p-2 text-green-600">‡∏ø{p1.total}</td>
              <td className="p-2 text-blue-600">‡∏ø{p2.total}</td>
              <td className="p-2 text-purple-600">‡∏ø{p3.total}</td>
            </tr>
          </tbody>
        </table>
      </div>

      {/* ‚úÖ ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ */}
      <div className="bg-green-50 border border-green-200 p-4 rounded-lg mb-6">
        <h3 className="font-semibold mb-2">‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö</h3>
        <p>‚ö° ‡∏á‡∏≤‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡πÑ‡∏ß‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î: <strong>{fastest.name}</strong> ({fastest.time} ‡∏ä‡∏°.)</p>
        <p>üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ñ‡∏π‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î: <strong>{cheapest.name}</strong> (‡∏ø{cheapest.total})</p>
      </div>
{/* ‚úÖ ‡∏Å‡∏£‡∏≤‡∏ü‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡πÅ‡∏ô‡∏ß‡∏ô‡∏≠‡∏ô */}
<div className="bg-white p-4 rounded-lg shadow mb-6">
  <h3 className="font-semibold mb-4">‡∏Å‡∏£‡∏≤‡∏ü‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö (‡πÅ‡∏ô‡∏ß‡∏ô‡∏≠‡∏ô)</h3>
  <BarChart
    layout="vertical"
    width={600}
    height={300}
    data={compareData}
    margin={{ left: 50 }}
  >
    <XAxis type="number" />
    <YAxis dataKey="name" type="category" />
    <Tooltip />
    <Legend />
    <Bar dataKey="workers" fill="#22c55e" name="‡πÅ‡∏£‡∏á‡∏á‡∏≤‡∏ô (‡∏Ñ‡∏ô)" />
    <Bar dataKey="time" fill="#3b82f6" name="‡πÄ‡∏ß‡∏•‡∏≤ (‡∏ä‡∏°.)" />
    <Bar dataKey="cost" fill="#f97316" name="‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢ (‡∏ö‡∏≤‡∏ó)" />
  </BarChart>
</div>

      {/* CTA */}
      <div className="flex gap-4">
        <button className="flex-1 bg-green-500 hover:bg-green-600 text-white py-2 rounded">
          ‡∏à‡∏≠‡∏á‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£
        </button>
        <button className="flex-1 bg-blue-500 hover:bg-blue-600 text-white py-2 rounded">
          ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£
        </button>
      </div>
    </div>
  );
}
